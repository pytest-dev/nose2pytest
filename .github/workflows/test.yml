name: Test

on: [push, pull_request, workflow_dispatch]

env:
  FORCE_COLOR: 1

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-20.04, macos-latest, windows-latest]
        exclude:  # Apple Silicon ARM64 does not support Python < v3.8
          - python-version: "3.6"
            os: macos-latest
          - python-version: "3.7.7"
            os: macos-latest
        include:  # So run those legacy versions on Intel CPUs
          - python-version: "3.6"
            os: macos-13
          - python-version: "3.7.7"
            os: macos-13

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.os }}-${{ matrix.python-version }}-v1-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-v1-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel
          python -m pip install --upgrade tox

      - name: Test
        run: |
          tox -e py
